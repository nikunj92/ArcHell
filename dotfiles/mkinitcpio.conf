# /etc/mkinitcpio.conf

# MODULES
# Preload essential modules for early boot.
# Ensure NVIDIA modules are listed for Wayland + NVIDIA.
MODULES=(i915 nvidia nvidia_modeset nvidia_uvm nvidia_drm)

# BINARIES
# Include necessary binaries; dependencies are auto-resolved.
BINARIES=()

# FILES
# Add specific files to the initramfs.
FILES=()

# HOOKS
# Define the sequence of hooks for initramfs creation.
HOOKS=(base systemd autodetect microcode modconf kms keyboard sd-vconsole block sd-encrypt filesystems fsck)

# COMPRESSION
# Use zstd for fast and efficient compression.
COMPRESSION="zstd"

# COMPRESSION_OPTIONS
# Generally left empty; mkinitcpio handles necessary options.
COMPRESSION_OPTIONS=()

# MODULES_DECOMPRESS
# Decompress modules for faster loading; set to "yes" or "no" as needed.
# MODULES_DECOMPRESS="yes"
#
############################
# Explanation of Key Entries
############################
# MODULES: Preloads GPU modules to ensure early availability during boot. Adjust based on specific hardware requirements.
#
# HOOKS:
#
#    base: Includes essential utilities and libraries.
#
#    systemd: Initializes systemd early in the boot process.
#
#    autodetect: Optimizes the initramfs by including only necessary modules.
#
#    microcode: Loads CPU microcode updates early.
#
#    modconf: Applies module configurations.
#
#    kms: Enables Kernel Mode Setting for early graphics initialization.
#
#    keyboard & sd-vconsole: Ensure keyboard functionality and console settings.
#
#    block: Adds block device modules.
#
#    sd-encrypt: Handles systemd-based disk encryption setups.
#
#    filesystems: Includes necessary filesystem drivers.
#
#    fsck: Performs filesystem checks during boot.
#
#    COMPRESSION: zstd offers a good balance between speed and compression ratio.
#
#    MODULES_DECOMPRESS: Setting this to "yes" can speed up module loading times during boot.
#######################
# Next Steps
#######################
# Update Kernel Command Line:
# Ensure /etc/kernel/cmdline contains the correct root parameters. For example:
#
# root=UUID=root-uuid rootflags=subvol=@ rw
#
# Rebuild the Initramfs:
# Execute:
#
# sudo mkinitcpio -p linux-uki
#
# Verify UKI Placement:
# Confirm that the Unified Kernel Image (arch-linux.efi) is located in /boot/EFI/Linux/.
#
# Check Bootloader Entries:
# Use:
#
# bootctl list
# to ensure the bootloader recognizes the UKI.
# see efibootmgr_helper.sh

